function t(){}function n(t){return t()}function e(){return Object.create(null)}function o(t){t.forEach(n)}function s(t){return"function"==typeof t}function c(t,n){return t!=t?n==n:t!==n||t&&"object"==typeof t||"function"==typeof t}function r(t,n,e,o){return t[1]&&o?function(t,n){for(const e in n)t[e]=n[e];return t}(e.ctx.slice(),t[1](o(n))):e.ctx}function a(t,n,e,o,s,c,a){const u=function(t,n,e,o){if(t[2]&&o){const s=t[2](o(e));if(void 0===n.dirty)return s;if("object"==typeof s){const t=[],e=Math.max(n.dirty.length,s.length);for(let o=0;o<e;o+=1)t[o]=n.dirty[o]|s[o];return t}return n.dirty|s}return n.dirty}(n,o,s,c);if(u){const s=r(n,e,o,a);t.p(s,u)}}function u(t,n,e){t.insertBefore(n,e||null)}function i(t){t.parentNode.removeChild(t)}function l(t){return document.createElement(t)}function p(t){return document.createTextNode(t)}function f(){return p(" ")}function d(t,n,e){null==e?t.removeAttribute(n):t.getAttribute(n)!==e&&t.setAttribute(n,e)}let $;function h(t){$=t}const g=[],m=[],k=[],y=[],b=Promise.resolve();let x=!1;function v(t){k.push(t)}let _=!1;const w=new Set;function E(){if(!_){_=!0;do{for(let t=0;t<g.length;t+=1){const n=g[t];h(n),j(n.$$)}for(h(null),g.length=0;m.length;)m.pop()();for(let t=0;t<k.length;t+=1){const n=k[t];w.has(n)||(w.add(n),n())}k.length=0}while(g.length);for(;y.length;)y.pop()();x=!1,_=!1,w.clear()}}function j(t){if(null!==t.fragment){t.update(),o(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(v)}}const A=new Set;function B(t,n){t&&t.i&&(A.delete(t),t.i(n))}function C(t,n,e,o){if(t&&t.o){if(A.has(t))return;A.add(t),(void 0).c.push(()=>{A.delete(t),o&&(e&&t.d(1),o())}),t.o(n)}}function L(t,e,c){const{fragment:r,on_mount:a,on_destroy:u,after_update:i}=t.$$;r&&r.m(e,c),v(()=>{const e=a.map(n).filter(s);u?u.push(...e):o(e),t.$$.on_mount=[]}),i.forEach(v)}function M(t,n){const e=t.$$;null!==e.fragment&&(o(e.on_destroy),e.fragment&&e.fragment.d(n),e.on_destroy=e.fragment=null,e.ctx=[])}function N(t,n){-1===t.$$.dirty[0]&&(g.push(t),x||(x=!0,b.then(E)),t.$$.dirty.fill(0)),t.$$.dirty[n/31|0]|=1<<n%31}function O(n,s,c,r,a,u,l=[-1]){const p=$;h(n);const f=s.props||{},d=n.$$={fragment:null,ctx:null,props:u,update:t,not_equal:a,bound:e(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(p?p.$$.context:[]),callbacks:e(),dirty:l,skip_bound:!1};let g=!1;if(d.ctx=c?c(n,f,(t,e,...o)=>{const s=o.length?o[0]:e;return d.ctx&&a(d.ctx[t],d.ctx[t]=s)&&(!d.skip_bound&&d.bound[t]&&d.bound[t](s),g&&N(n,t)),e}):[],d.update(),g=!0,o(d.before_update),d.fragment=!!r&&r(d.ctx),s.target){if(s.hydrate){const t=(m=s.target,Array.from(m.childNodes));d.fragment&&d.fragment.l(t),t.forEach(i)}else d.fragment&&d.fragment.c();s.intro&&B(n.$$.fragment),L(n,s.target,s.anchor),E()}var m;h(p)}class T{$destroy(){M(this,1),this.$destroy=t}$on(t,n){const e=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return e.push(n),()=>{const t=e.indexOf(n);-1!==t&&e.splice(t,1)}}$set(t){var n;this.$$set&&(n=t,0!==Object.keys(n).length)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}function S(t){let n,e,o,s;const c=t[2].default,p=function(t,n,e,o){if(t){const s=r(t,n,e,o);return t[0](s)}}(c,t,t[1],null);return{c(){n=l("button"),p&&p.c(),d(n,"type","button")},m(c,r){var a,i,l,f;u(c,n,r),p&&p.m(n,null),e=!0,o||(a=n,i="click",l=t[3],a.addEventListener(i,l,f),s=()=>a.removeEventListener(i,l,f),o=!0)},p(t,[n]){p&&p.p&&2&n&&a(p,c,t,t[1],n,null,null)},i(t){e||(B(p,t),e=!0)},o(t){C(p,t),e=!1},d(t){t&&i(n),p&&p.d(t),o=!1,s()}}}function q(t,n,e){let{$$slots:o={},$$scope:s}=n,{count:c=0}=n;return t.$$set=t=>{"count"in t&&e(0,c=t.count),"$$scope"in t&&e(1,s=t.$$scope)},[c,s,o,()=>{e(0,c++,c)}]}class H extends T{constructor(t){super(),O(this,t,q,S,c,{count:0})}}function I(t){let n;return{c(){n=p("Increment the count")},m(t,e){u(t,n,e)},d(t){t&&i(n)}}}function P(t){let n,e,o,s,c,r,a,$,h,g;function k(n){t[1].call(null,n)}let b={$$slots:{default:[I]},$$scope:{ctx:t}};return void 0!==t[0]&&(b.count=t[0]),$=new H({props:b}),m.push(()=>function(t,n,e){const o=t.$$.props[n];void 0!==o&&(t.$$.bound[o]=e,e(t.$$.ctx[o]))}($,"count",k)),{c(){var u;n=l("h1"),n.textContent=`${D} v${z}`,e=f(),o=l("pre"),s=f(),c=l("h2"),r=p(t[0]),a=f(),(u=$.$$.fragment)&&u.c(),d(o,"class","language-html")},m(t,i){u(t,n,i),u(t,e,i),u(t,o,i),o.innerHTML='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">"./Button.svelte"</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>',u(t,s,i),u(t,c,i),function(t,n){t.appendChild(n)}(c,r),u(t,a,i),L($,t,i),g=!0},p(t,[n]){var e,o;(!g||1&n)&&(e=r,o=""+(o=t[0]),e.wholeText!==o&&(e.data=o));const s={};var c;4&n&&(s.$$scope={dirty:n,ctx:t}),!h&&1&n&&(h=!0,s.count=t[0],c=()=>h=!1,y.push(c)),$.$set(s)},i(t){g||(B($.$$.fragment,t),g=!0)},o(t){C($.$$.fragment,t),g=!1},d(t){t&&i(n),t&&i(e),t&&i(o),t&&i(s),t&&i(c),t&&i(a),M($,t)}}}const z="0.1.0",D="svite-gh-pages";function F(t,n,e){let o=0;return[o,function(t){o=t,e(0,o)}]}new class extends T{constructor(t){super(),O(this,t,F,P,c,{})}}({target:document.body});
